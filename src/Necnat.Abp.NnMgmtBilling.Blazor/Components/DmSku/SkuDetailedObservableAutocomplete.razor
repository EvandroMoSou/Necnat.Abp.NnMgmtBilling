@using Blazorise.Components
@using Microsoft.Extensions.Localization;
@using Necnat.Abp.NnLibCommon.Blazor.Components
@using Necnat.Abp.NnLibCommon.Localization
@using Necnat.Abp.NnMgmtBilling.Domains
@using Necnat.Abp.NnMgmtBilling.Localization
@using System.Text.Json
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.Identity
@inherits ObservableAutocompleteCmptBase<ISkuAppService, SkuDto, Guid, SkuResultRequestDto>
@inject IStringLocalizer<NnLibCommonResource> NL

<Fields>
    <Field ColumnSize="ColumnSize.Is10">
        <Autocomplete @ref="_autocomplete" TItem="SkuDto"
                      TValue="SkuDto"
                      Data="@Data"
                      ReadData="@OnHandleReadDataAsync"
                      TextField="@((item) => $"{item.Name}")"
                      ValueField="@((item) => item)"
                      @bind-SelectedValue="@_internalSelectedValue"
                      Placeholder="@(string.Format(NL["Enter at least {0} characters to start the search..."], SearchValueMinLength))"
                      Disabled="@Disabled"
                      Filter="AutocompleteFilter.Contains">
            <NotFoundContent>@string.Format(NL["Sorry... {0} was not found!"], context)</NotFoundContent>
        </Autocomplete>
    </Field>
    <Field ColumnSize="ColumnSize.Is2">
        <Button Class="w-100" Color="Color.Primary" Clicked="AddAsync" Disabled="@(_internalSelectedValue == null)"><i class="fas fa-plus"></i></Button>
    </Field>
</Fields>
<Fields>
    @if (SelectedEntityDtoList != null)
    {
        @foreach (var iSelectedValue in SelectedEntityDtoList)
        {
            <hr />
            <Fields>
                <Field ColumnSize="ColumnSize.Is10">
                    <h4>@NL["SKU"] - @iSelectedValue.Name</h4>
                </Field>
                <Field ColumnSize="ColumnSize.Is2">
                    <Button Class="w-100" Color="Color.Secondary" Clicked="async () => await RemoveAsync(iSelectedValue)"><i class="fas fa-minus"></i></Button>
                </Field>
            </Fields>
            <SkuDetailedViewer Entity="iSelectedValue" />
        }
    }
</Fields>

@namespace Necnat.Abp.NnMgmtBilling.Blazor.Components
@code {

    [Parameter]
    public DateTimeOffset? HistoryTime { get; set; }

    public SkuDetailedObservableAutocomplete()
    {
        LocalizationResource = typeof(NnMgmtBillingResource);
    }

    public override async Task AddAsync()
    {
        if (_internalSelectedValue != null)
        {
            if (AddMethod != null)
                _internalSelectedValue.Id = await AddMethod.Invoke(_internalSelectedValue);

            await InvokeAsync(async () =>
            {
                if (HistoryTime == null)
                    SelectedEntityDtoList!.Add(_internalSelectedValue);
                else
                    SelectedEntityDtoList!.Add(await AppService!.GetTemporalDetailedAsync(HistoryTime.Value, _internalSelectedValue.Id));
            });

            await InvokeAsync(async () =>
            {
                SelectedKeyList = SelectedEntityDtoList!.Select(x => x.Id).ToList();
                await SelectedKeyListChanged.InvokeAsync(SelectedKeyList);
            });

            await InvokeAsync(async () =>
            {
                SelectedEntityDtoList = SelectedEntityDtoList;
                await SelectedEntityDtoListChanged.InvokeAsync(SelectedEntityDtoList);
            });

            await InvokeAsync(async () =>
            {
                await OnAfterAddAsync();
            });
        }
    }
}