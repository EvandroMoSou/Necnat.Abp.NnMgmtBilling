@using Blazorise.Components
@using Microsoft.Extensions.Localization;
@using Necnat.Abp.NnLibCommon.Blazor.Components
@using Necnat.Abp.NnLibCommon.Localization
@using Necnat.Abp.NnMgmtBilling.Domains
@using Necnat.Abp.NnMgmtBilling.Localization
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.Identity
@inherits SelectedEntityDtoObservableCmptBase<ISkuScopeAppService, SkuScopeDto, Guid, SkuScopeResultRequestDto>
@inject IStringLocalizer<NnLibCommonResource> NL

<SkuScopeWrapper @bind-Entity="_internalSelectedValue" />
<Fields>
    <Field ColumnSize="ColumnSize.Is12">
        <Button Class="float-end" Color="Color.Primary" Clicked="AddAsync" Disabled="@(_internalSelectedValue == null)">@NL["Add"]</Button>
    </Field>
</Fields>

<DataGrid TItem="SkuScopeDto"
          Data="SelectedEntityDtoList"
          ShowPager="true"
          PageSize="PageSize">
    <DataGridColumns>
        <DataGridEntityActionsColumn TItem="SkuScopeDto">
            <DisplayTemplate>
                <EntityActions TItem="SkuScopeDto">
                    <EntityAction TItem="SkuScopeDto"
                                  Text="@L["Delete"]"
                                  Clicked="async () => await RemoveAsync(context)" />
                </EntityActions>
            </DisplayTemplate>
        </DataGridEntityActionsColumn>
        <DataGridColumn TItem="SkuScopeDto"
                        Field="@nameof(SkuScopeDto.ApplicationName)"
                        Caption="@L[SkuScopeConsts.ApplicationNameDisplay]"></DataGridColumn>
        <DataGridColumn TItem="SkuScopeDto"
                        Field="@nameof(SkuScopeDto.HttpMethod)"
                        Caption="@L[SkuScopeConsts.HttpMethodDisplay]">
            <DisplayTemplate>
                @context.HttpMethod.ToString()
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="SkuScopeDto"
                        Field="@nameof(SkuScopeDto.Url)"
                        Caption="@L[SkuScopeConsts.UrlDisplay]"></DataGridColumn>
        <DataGridCheckColumn TItem="SkuScopeDto"
                             Field="@nameof(SkuScopeDto.IsBillable)"
                             Caption="@L[SkuScopeConsts.IsBillableDisplay]"></DataGridCheckColumn>
    </DataGridColumns>
</DataGrid>
@if (SelectedEntityDtoList != null)
{
    <br />
    <div class="invalid-feedback-extra">@SkuValidator.ValidateSkuScopeList(SelectedEntityDtoList.ToList(), NL)</div>
}

@namespace Necnat.Abp.NnMgmtBilling.Blazor.Components
@code {

    public SkuScopeObservableWrapper()
    {
        LocalizationResource = typeof(NnMgmtBillingResource);
    }

    public override async Task AddAsync()
    {
        if (_internalSelectedValue != null)
        {
            _internalSelectedValue.SkuId = Guid.NewGuid();
            if (SkuScopeValidator.Validate(_internalSelectedValue, NL) != null)
                return;
        }

        await base.AddAsync();
    }
}