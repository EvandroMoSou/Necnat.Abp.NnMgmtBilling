@using Blazorise.Components
@using Microsoft.Extensions.Localization;
@using Necnat.Abp.NnLibCommon.Blazor.Components
@using Necnat.Abp.NnLibCommon.Blazor.Extensions
@using Necnat.Abp.NnLibCommon.Localization
@using Necnat.Abp.NnMgmtBilling.Domains
@using Necnat.Abp.NnMgmtBilling.Localization
@using System.Collections.ObjectModel
@using Volo.Abp.AspNetCore.Components
@using Volo.Abp.Identity
@inherits AutocompleteCmptBase<INnOpenIddictApplicationAppService, NnOpenIddictApplicationDto, Guid, NnOpenIddictApplicationResultRequestDto>
@inject IStringLocalizer<NnLibCommonResource> NL

@if (_isLoading)
{
    <div class="animated-background loading-input-height"></div>
}
else
{
    <Autocomplete TItem="NnOpenIddictApplicationDto"
                  TValue="Guid"
                  Data="@Data"
                  ReadData="@OnHandleReadData"
                  TextField="@((item) => item.DisplayName)"
                  ValueField="@((item) => item.Id)"
                  SelectedValue="@_internalSelectedValue"
                  SelectedValueChanged="@OnSelectedValueChangedAsync"
                  Placeholder="@string.Format(NL["Enter at least {0} character(s) to start the search..."], SearchValueMinLength)"
                  Disabled="@Disabled"
                  Validator="Validator!"
                  Filter="AutocompleteFilter.Contains">
        <NotFoundContent>@string.Format(NL["Sorry... {0} was not found!"], context)</NotFoundContent>
    </Autocomplete>
}

@namespace Necnat.Abp.NnMgmtBilling.Blazor.Components
@code {

    public OpenIddictApplicationAutocomplete()
    {
        LocalizationResource = typeof(NnMgmtBillingResource);
    }

}