@using Microsoft.Extensions.Localization;
@using Necnat.Abp.NnLibCommon.Blazor.Components.NnIdentity
@using Necnat.Abp.NnLibCommon.Blazor.Extensions
@using Necnat.Abp.NnLibCommon.Extensions
@using Necnat.Abp.NnLibCommon.Localization;
@using Necnat.Abp.NnMgmtBilling.Domains
@using System.Collections.ObjectModel
@using Necnat.Abp.NnMgmtBilling.Localization
@using Volo.Abp.AspNetCore.Components
@using Volo.Abp.Identity
@inherits AbpComponentBase
@inject IStringLocalizer<NnLibCommonResource> NL
@inject IBillingContractAppService AppService

<Fields>
    <Field ColumnSize="ColumnSize.Is4">
        <FieldLabel>@L[BillingContractConsts.BillingClientIdDisplay]</FieldLabel>
        <BillingClientSelectList @bind-SelectedKey="@Entity!.BillingClientId" />
        <div class="invalid-feedback-extra">@BillingContractValidator.ValidateBillingClientId(Entity!.BillingClientId, NL)</div>
    </Field>
    <Validation Validator="@ValidateSkuReferenceTime">
        <Field ColumnSize="ColumnSize.Is4">
            <FieldLabel>@L[BillingContractConsts.SkuReferenceTimeDisplay]</FieldLabel>
            <DateEdit TValue="DateTimeOffset?" InputMode="DateInputMode.DateTime" @bind-Date="@Entity!.SkuReferenceTime" Disabled>
                <Feedback>
                    <ValidationError />
                </Feedback>
            </DateEdit>
        </Field>
    </Validation>
    <Validation Validator="@ValidateEffectiveTime">
        <Field ColumnSize="ColumnSize.Is4">
            <FieldLabel>@L[BillingContractConsts.EffectiveTimeDisplay]</FieldLabel>
            <DateEdit TValue="DateTimeOffset?" InputMode="DateInputMode.DateTime" @bind-Date="@Entity!.EffectiveTime">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </DateEdit>
        </Field>
    </Validation>
</Fields>
<Fields>
    <Validation Validator="@ValidateCode">
        <Field ColumnSize="ColumnSize.Is10">
            <FieldLabel>@L[BillingContractConsts.CodeDisplay]</FieldLabel>
            <TextEdit @bind-Text="@Entity!.Code">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </TextEdit>
        </Field>
    </Validation>
    <Validation Validator="@ValidateIsActive">
        <Field ColumnSize="ColumnSize.Is2">
            <FieldLabel>@L[BillingContractConsts.IsActiveDisplay]</FieldLabel>
            <Check TValue="bool?" @bind-Checked="@Entity!.IsActive">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </Check>
        </Field>
    </Validation>
</Fields>
@if (Entity != null && Entity.AcceptanceUserId != null)
{
    <Fields>
        @* <UserAutocomplete @bind-SelectedValue="Entity!.ValidateAcceptanceUserId" /> *@
        <Field ColumnSize="ColumnSize.Is4">
            <FieldLabel>@L[BillingContractConsts.AcceptanceTimeDisplay]</FieldLabel>
            <DatePicker TValue="DateTimeOffset?" @bind-Date="@Entity!.AcceptanceTime" InputFormat="dd/MM/yyyy HH:mm" DisplayFormat="dd/MM/yyyy HH:mm" Disabled />
        </Field>
    </Fields>
}

@namespace Necnat.Abp.NnMgmtBilling.Blazor.Components
@code {

    [Parameter]
    public BillingContractDto? Entity { get; set; }

    [Parameter]
    public EventCallback<BillingContractDto?> EntityChanged { get; set; }

    public BillingContractWrapper()
    {
        LocalizationResource = typeof(NnMgmtBillingResource);
    }

    void ValidateBillingClientId(ValidatorEventArgs e)
    {
        e.WithError(BillingContractValidator.ValidateBillingClientId((Guid?)e.Value, NL));
    }

    void ValidateCode(ValidatorEventArgs e)
    {
        e.WithError(BillingContractValidator.ValidateCode((string?)e.Value, NL));
    }

    void ValidateEffectiveTime(ValidatorEventArgs e)
    {
        e.WithError(BillingContractValidator.ValidateEffectiveTime(e.Value.ToNullableDateTimeOffset(), NL));
    }

    void ValidateIsActive(ValidatorEventArgs e)
    {
        e.WithError(BillingContractValidator.ValidateIsActive((bool?)e.Value, NL));
    }

    void ValidateSkuReferenceTime(ValidatorEventArgs e)
    {
        e.WithError(BillingContractValidator.ValidateSkuReferenceTime(e.Value.ToNullableDateTimeOffset(), NL));
    }
}