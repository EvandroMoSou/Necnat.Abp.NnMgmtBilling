@using Microsoft.Extensions.Localization;
@using System.Collections.ObjectModel
@using Necnat.Abp.NnLibCommon.Blazor.Extensions
@using Necnat.Abp.NnLibCommon.Localization
@using Necnat.Abp.NnMgmtBilling.Domains
@using Necnat.Abp.NnMgmtBilling.Localization
@using Volo.Abp.AspNetCore.Components
@using Volo.Abp.Identity
@inherits AbpComponentBase
@inject IStringLocalizer<NnLibCommonResource> NL

<Fields>
    <Validation Validator="@ValidateDisplayName">
        <Field ColumnSize="ColumnSize.Is10">
            <FieldLabel>@L[BillingEndpointConsts.DisplayNameDisplay]</FieldLabel>
            <TextEdit @bind-Text="@Entity!.DisplayName">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </TextEdit>
        </Field>
    </Validation>
    <Validation Validator="@ValidateIsActive">
        <Field ColumnSize="ColumnSize.Is2">
            <FieldLabel>@L[BillingEndpointConsts.IsActiveDisplay]</FieldLabel>
            <Check TValue="bool?" @bind-Checked="@Entity!.IsActive">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </Check>
        </Field>
    </Validation>
</Fields>
<Validation Validator="@ValidateEndpoint">
    <Field>
        <FieldLabel>@L[BillingEndpointConsts.EndpointDisplay]</FieldLabel>
        <TextEdit @bind-Text="@Entity!.Endpoint">
            <Feedback>
                <ValidationError />
            </Feedback>
        </TextEdit>
    </Field>
</Validation>


@namespace Necnat.Abp.NnMgmtBilling.Blazor.Components
@code {

    [Parameter]
    public BillingEndpointDto? Entity { get; set; }

    [Parameter]
    public EventCallback<BillingEndpointDto?> EntityChanged { get; set; }

    public BillingEndpointWrapper()
    {
        LocalizationResource = typeof(NnMgmtBillingResource);
    }

    void ValidateDisplayName(ValidatorEventArgs e)
    {
        e.WithError(BillingEndpointValidator.ValidateDisplayName((string?)e.Value, NL));
    }

    void ValidateEndpoint(ValidatorEventArgs e)
    {
        e.WithError(BillingEndpointValidator.ValidateEndpoint((string?)e.Value, NL));
    }

    void ValidateIsActive(ValidatorEventArgs e)
    {
        e.WithError(BillingEndpointValidator.ValidateIsActive((bool?)e.Value, NL));
    }

}